{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/f-xyz-diff/index.js","ng-repeat-fast-0.2.21.min.js","src/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ngRepeatFast","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"getUniqueId","lastUniqueId","maybe","x","y","undefined","buildHashToIndexMap","list","primaryKey","map","item","diff","newList","oldList","addEntry","state","newIndex","prevIndex","push","oldIndex","newIndexMap","oldIndexMap","newItem","oldItem","DIFF_DELETED","DIFF_CREATED","indexOfNewItemInOldList","indexOfOldItemInNewList","isCreated","isDeleted","DIFF_MOVED","DIFF_NOT_MODIFIED","NOT_MODIFIED","CREATED","MOVED","DELETED",2,"factory","ngRepeatFastFactory","$parse","$compile","scope","restrict","priority","terminal","link","$scope","$element","$attrs","ngRepeatFastLink","getModel","expression","renderChanges","prev","difference","trackBy","syncDom","prevNode","elementNode","forEach","diffEntry","nodeIndex","node","itemHashToNodeMap","getNodeIndex","insertAfter","showNode","createNode","hashKey","hideNode","afterNode","nextSibling","elementParentNode","insertBefore","appendChild","$new","iteratorName","templateNode","cloneNode","amendItemScope","Object","defineProperties","$index","enumerable","get","$first","$last","$middle","$even","$odd","className","slice","absolute","nodeList","childNodes","index","indexOf","elementNodeIndex","HASH_KEY","rx","match","model","Array","isArray","parentNode","removeAttribute","unwatchModel","test","$watchCollection","$on","angular","directive","f-xyz-diff"],"mappings":"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","file":"ng-repeat-fast-0.2.21.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar DIFF_NOT_MODIFIED = 0;\nvar DIFF_CREATED = 1;\nvar DIFF_MOVED = 2;\nvar DIFF_DELETED = -1;\n\nvar lastUniqueId = 0;\n\n/**\n * Returns auto incremental unique ID as integer.\n * @returns {number} integers starting from 0\n */\nfunction getUniqueId() {\n    return lastUniqueId++;\n}\n\n/**\n * Returns x if it is not undefined, y otherwise.\n * @param x\n * @param y\n * @returns {*}\n */\nfunction maybe(x, y) {\n    if (x !== undefined) return x;\n    return y;\n}\n\n/**\n * @param {Array} list\n * @param {string} primaryKey\n * @returns {{}}\n */\nfunction buildHashToIndexMap(list, primaryKey) {\n    var map = {};\n    for (var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        map[item[primaryKey]] = i;\n    }\n    return map;\n}\n\n/**\n * Calculates difference between two arrays.\n * Returns array of { item: T, state: int }.\n * Where state means: 0 - not modified, 1 - created, -1 - deleted.\n * @param {Array} newList\n * @param {Array} oldList\n * @param {string} primaryKey item's unique index field name\n */\nfunction diff(newList, oldList, primaryKey) {\n    var diff = [];\n    var newIndex = 0;\n    var oldIndex = 0;\n\n    var newIndexMap = buildHashToIndexMap(newList, primaryKey);\n    var oldIndexMap = buildHashToIndexMap(oldList, primaryKey);\n\n    function addEntry(item, state, newIndex, prevIndex) {\n        diff.push({\n            item: item,\n            state: state,\n            oldIndex: prevIndex,\n            newIndex: newIndex\n        });\n    }\n\n    for (; newIndex < newList.length || oldIndex < oldList.length;) {\n        var newItem = newList[newIndex];\n        var oldItem = oldList[oldIndex];\n\n        if (newIndex >= newList.length) {\n\n            addEntry(oldItem, DIFF_DELETED, -1, oldIndex);\n            ++oldIndex;\n\n        } else if (oldIndex >= oldList.length) {\n\n            addEntry(newItem, DIFF_CREATED, newIndex, -1);\n            ++newIndex;\n\n        } else if (newItem !== oldItem) {\n\n            var indexOfNewItemInOldList =\n                maybe(oldIndexMap[newItem[primaryKey]], -1);\n\n            var indexOfOldItemInNewList =\n                maybe(newIndexMap[oldItem[primaryKey]], -1);\n\n            var isCreated = indexOfNewItemInOldList === -1;\n            var isDeleted = indexOfOldItemInNewList === -1;\n\n            // created\n            if (isCreated) {\n                addEntry(newItem, DIFF_CREATED, newIndex, -1);\n                ++newIndex;\n            }\n\n            // moved\n            if (!isCreated && !isDeleted) {\n                addEntry(newItem, DIFF_MOVED, newIndex, indexOfOldItemInNewList);\n                ++newIndex;\n                ++oldIndex;\n            }\n\n            // deleted\n            if (isDeleted) {\n                addEntry(oldItem, DIFF_DELETED, -1, oldIndex);\n                ++oldIndex;\n            }\n\n        } else {\n            addEntry(oldItem, DIFF_NOT_MODIFIED, newIndex, oldIndex);\n            ++newIndex;\n            ++oldIndex;\n        }\n    }\n\n    return diff;\n}\n\n// exports ////////////////////////////////////////////////////////////////\n\ndiff.NOT_MODIFIED = DIFF_NOT_MODIFIED;\ndiff.CREATED = DIFF_CREATED;\ndiff.MOVED = DIFF_MOVED;\ndiff.DELETED = DIFF_DELETED;\ndiff.getUniqueId = getUniqueId;\ndiff.buildHashToIndexMap = buildHashToIndexMap;\n\nmodule.exports = diff;\n",null,"(function (factory) {\n    /* istanbul ignore next */\n    if (typeof require == 'function') {\n        var diff = require('f-xyz-diff');\n        factory(module.exports, diff);\n    } else {\n        factory(window, window.diff);\n    }\n})(function (exports, diff) {\n    'use strict';\n\n    ///////////////////////////////////////////////////////////////////////////\n\n    exports.ngRepeatFast = angular\n        .module('ngRepeatFast', [])\n        .directive('ngRepeatFast', [\n            '$parse', '$compile',\n            ngRepeatFastFactory\n        ]);\n\n    function ngRepeatFastFactory($parse, $compile) {\n        return {\n            scope: true,\n            restrict: 'A',\n            priority: 1000,\n            terminal: true,\n            link: function ($scope, $element, $attrs) {\n                ngRepeatFastLink($scope, $element, $attrs, $parse, $compile);\n            }\n        };\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n\n    function ngRepeatFastLink($scope, $element, $attrs, $parse, $compile) {\n\n        // todo - animations support\n        // todo - garbage collection for DOM nodes (?) timer-based?\n\n        var HASH_KEY = '$$hashKey';\n\n        if ('ngInclude' in $attrs) {\n            throw Error('ngRepeatFast: ngInclude on repeating ' +\n                        'element is not supported. ' +\n                        'Please create nested element with ng-include.');\n        }\n\n        // parse ng-repeat expression /////////////////////////////////////////\n\n        var rx = /^\\s*(\\w+)\\sin\\s(.+?)(\\strack by\\s(.+?))?$/;\n        var match = $attrs.ngRepeatFast.match(rx);\n        if (!match) {\n            throw Error('ngRepeatFast: expected ngRepeatFast in form of ' +\n                        '`{item} in {array} [| filter, etc]` [track by \\'{field}\\'] ' +\n                        'but got `' + $attrs.ngRepeatFast + '`');\n        }\n\n        var iteratorName = match[1];\n        var expression = match[2];\n        var trackBy = match[4] || HASH_KEY;\n        var model = getModel();\n        if (!Array.isArray(model)) {\n            throw Error('ngRepeatFast: expected model `' + $attrs.ngRepeatFast + '` ' +\n                        'to be an array but got: ' + model);\n        }\n\n        // build DOM //////////////////////////////////////////////////////////\n\n        var itemHashToNodeMap = {};\n\n        var elementNode = $element[0];\n        var elementParentNode = elementNode.parentNode;\n        var elementNodeIndex = getNodeIndex(elementNode, true);\n        var templateNode = elementNode.cloneNode(true);\n        templateNode.removeAttribute('ng-repeat-fast');\n\n        var prevNode = elementNode;\n        model.forEach(function (item) {\n            var node = createNode(item);\n            insertAfter(node, prevNode);\n            prevNode = node;\n            // store node\n            if (trackBy === HASH_KEY) {\n                item[trackBy] = diff.getUniqueId();\n            }\n            itemHashToNodeMap[item[trackBy]] = node;\n        });\n        hideNode(elementNode);\n\n        // watch model for changes if it is not one-time binding\n        var unwatchModel;\n        if (!/^::/.test(expression)) {\n            unwatchModel = $scope.$watchCollection(getModel, renderChanges);\n        }\n\n        ///////////////////////////////////////////////////////////////////\n\n        function getModel() {\n            return $parse(expression)($scope);\n        }\n\n        function renderChanges(list, prev) {\n            if (list === prev) return;\n\n            var difference = diff(list, prev, trackBy);\n\n            syncDom(difference);\n        }\n\n        function syncDom(difference) {\n            var prevNode = elementNode; // insert new node after me\n            difference.forEach(function (diffEntry, i) {\n                var item = diffEntry.item;\n                var node = itemHashToNodeMap[item[trackBy]];\n                var nodeIndex;\n\n                switch (diffEntry.state) {\n\n                    case diff.CREATED:\n                        if (node) {\n                            nodeIndex = getNodeIndex(node);\n                            if (nodeIndex != i) {\n                                insertAfter(node, prevNode);\n                            }\n                            showNode(node);\n                        } else {\n                            node = createNode(item);\n                            insertAfter(node, prevNode);\n                            var hashKey = diff.getUniqueId();\n                            item[trackBy] = hashKey;\n                            itemHashToNodeMap[hashKey] = node;\n                        }\n                        break;\n\n                    case diff.MOVED:\n                    case diff.NOT_MODIFIED:\n                        nodeIndex = getNodeIndex(node);\n                        if (nodeIndex != i) {\n                            insertAfter(node, prevNode);\n                        }\n                        break;\n\n                    case diff.DELETED:\n                        hideNode(node);\n                        //deleteNode(node);\n                        //delete itemHashToNodeMap[item[trackBy]];\n                        break;\n                }\n                prevNode = node;\n            });\n        }\n\n        // DOM operations /////////////////////////////////////////////////\n\n        function insertAfter(node, afterNode) {\n            if (afterNode.nextSibling) {\n                elementParentNode.insertBefore(node, afterNode.nextSibling);\n            } else {\n                elementParentNode.appendChild(node);\n            }\n        }\n\n        function createNode(item) {\n            var scope = $scope.$new();\n            scope[iteratorName] = item;\n\n            var node = templateNode.cloneNode(true);\n\n            amendItemScope(scope, node);\n            $compile(node)(scope);\n\n            return node;\n        }\n\n        function amendItemScope(scope, node) {\n            Object.defineProperties(scope, {\n                $index: {\n                    enumerable: true,\n                    get: function () {\n                        return getNodeIndex(node);\n                    }\n                },\n                $first: {\n                    enumerable: true,\n                    get: function () {\n                        return getNodeIndex(node) === 0;\n                    }\n                },\n                $last: {\n                    enumerable: true,\n                    get: function () {\n                        var length = getModel().length;\n                        return getNodeIndex(node) === length-1;\n                    }\n                },\n                $middle: {\n                    enumerable: true,\n                    get: function () {\n                        return !this.$first && !this.$last;\n                    }\n                },\n                $even: {\n                    enumerable: true,\n                    get: function () {\n                        return this.$index % 2 === 0;\n                    }\n                },\n                $odd: {\n                    enumerable: true,\n                    get: function () {\n                        return this.$index % 2 === 1;\n                    }\n                }\n            });\n            return scope;\n        }\n\n        function showNode(node) {\n            node.className = node.className.slice(0, -8);\n        }\n\n        function hideNode(node) {\n            node.className += ' ng-hide';\n        }\n\n        function getNodeIndex(node, absolute) {\n            var nodeList = elementParentNode.childNodes;\n            var index = [].indexOf.call(nodeList, node);\n            if (!absolute) {\n                index = index - elementNodeIndex - 1;\n            }\n            return index;\n        }\n\n        ///////////////////////////////////////////////////////////////////////////\n\n        $scope.$on('$destroy', function () {\n            unwatchModel();\n        });\n    }\n\n});\n"],"sourceRoot":"/source/"}